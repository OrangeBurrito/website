---
import LogoHeader from '../components/LogoHeader.astro'
import NavBar from '../components/NavBar.svelte'
import SiteSettings from '../components/SiteSettings.svelte'
import '../styles/global.css'

let {title} = Astro.props
let initialLang = Astro.cookies.get('language')?.value || 'en';
let initialTheme = Astro.cookies.get('theme')?.value || 'dark';

if (!Astro.cookies.has('language')) {
	Astro.cookies.set('language', 'en', { path: '/' });
}

if (!Astro.cookies.has('theme')) {
	Astro.cookies.set('theme', 'dark', { path: '/' });
}
---

<html>
<head>
	<meta charset="UTF-8">
	<meta content="width=device-width, initial-scale=1" name="viewport" />
	<link rel="shortcut icon" href="favicon.png" type="image/x-icon">
	<title>{title}</title>
</head>
<body>
	<div class="layout">
		<aside>
			<header>
				<LogoHeader/>
				<NavBar currentPath={Astro.url.pathname} />
			</header>
		</aside>
		<div class="corner">
			<slot name="corner"/>
			<SiteSettings lang={initialLang} dark={initialTheme === 'dark'} client:load />
		</div>
		<main>
			<slot/>
		</main>
		<img class="main-image" src="/images/fruitstack2.png" alt="">
	</div>
</body>
</html>

<style>
	.layout {
		position: relative;
		display: grid;
		width: 100%;
		height: 100vh;
		grid-template-areas: 
			"aside main"
			"corner main";
	}

	aside, main {
		padding: var(--space-lg);
	}

	aside {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		grid-area: aside;
	}

	.corner {
		position: absolute;
		bottom: var(--space-lg);
		left: var(--space-lg);
		grid-area: corner;
	}

	main {
		display: flex;
		flex-direction: column;
		align-items: flex-end;
		flex-grow: 2;
		text-align: right;
		overflow-y: auto;
		grid-area: main;
	}

	.main-image {
		position: absolute;
		image-rendering: pixelated;
		image-rendering: crisp-edges;
		z-index: -3;
		bottom: 15%;
		width: 400px;
	}

		
	@media screen and (max-width: 600px) {
		.layout {
			display: flex;
			flex-wrap: wrap;
			height: auto;
		}

		.corner {
			position: relative;
			order: 3;
			margin-top: var(--space-lg);
		}
		main {
			text-align: left;
			align-items: flex-start;
		}
		
		.main-image {
			width: 200px;
			opacity: 0.5;
			right: 10%;
		}
	}

	@media screen and (min-width: 601px) {
		aside {
			gap: var(--space-md);
			flex-basis: 20%;
		}

		main {
			flex-basis: 20%;
		}

		.main-image {
			left: 20%;
		}
	}
</style>